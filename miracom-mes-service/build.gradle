buildscript {
	ext {
		//springBootVersion = '2.0.2.RELEASE'
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		maven { url "http://repo.maven.apache.org/maven2" }
		maven { url "http://192.168.20.33:8081/nexus/content/repositories/thirdparty/" }
		maven { url "http://192.168.20.33:8081/nexus/content/repositories/releases/" }
		maven { url "http://192.168.20.33:8081/nexus/content/repositories/central/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'kr.co.miracom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
	from('src/main/java') {
		include '**/*.sql'
	}
}

repositories {
	maven { url "http://repo.maven.apache.org/maven2" }
	maven { url "http://192.168.20.33:8081/nexus/content/repositories/thirdparty/" }
	maven { url "http://192.168.20.33:8081/nexus/content/repositories/releases/" }
	maven { url "http://192.168.20.33:8081/nexus/content/repositories/central/" }
}

ext {
	//springCloudVersion = 'Finchley.BUILD-SNAPSHOT'
	springCloudVersion = 'Edgware.SR3'
}

dependencies {
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'	
	compile group: 'io.springfox', name: 'springfox-bean-validators', version: '2.8.0'
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.13'
	
	//compile('org.springframework.boot:spring-boot-starter-data-jpa') {
	//	exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc' 
	//}
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	//compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')
	compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.3'
	compile('com.edb:edb:1.1.2')
	/*
	compile('kr.co.miracom.chimera:chimera-core:0.0.7-SNAPSHOT') {
		exclude group: 'org.springframework.data', module: 'spring-data-jpa'		
		exclude group: 'org.springframework.security', module: 'spring-security-web'
	}*/
	
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.10'
	
	compile group: 'kr.co.miracom', name: 'miracom-adm-api', version: '0.0.1'
	compile group: 'kr.co.miracom', name: 'miracom-dbist', version: '0.0.1'
	
	compileOnly('org.projectlombok:lombok')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

configurations.all {
	//resolutionStrategy.cacheDynamicVersionsFor 1, 'hours'
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

	resolutionStrategy.dependencySubstitution {
		/**/
		substitute module("kr.co.miracom:miracom-dbist") with project(':miracom-dbist')
		/*
		substitute module("kr.co.miracom:miracom-adm-api") with project(':miracom-adm-api')*/
	}
}